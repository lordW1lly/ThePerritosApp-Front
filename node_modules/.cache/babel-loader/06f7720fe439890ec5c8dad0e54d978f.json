{"ast":null,"code":"import axios from 'axios';\nexport function getDogs() {\n  return async function (dispatch) {\n    // const dogsCreated = await Dog.findAll()\n    let allDogs = (await axios.get(`http://localhost:3001/dogs`)).data; // dogsCreated.map( dc => allDogs.push(dc))\n    //let  allDogsjson = allDogs.toJson()\n\n    dispatch({\n      type: \"GET_DOGS\",\n      payload: allDogs //json\n\n    });\n  };\n}\nexport function searchDog(name) {\n  return async function (dispatch) {\n    let breedName = (await axios.get(`http://localhost:3001/dogs?name=${name}`)).data;\n    dispatch({\n      type: \"SEARCH_DOG\",\n      payload: breedName\n    });\n  };\n}\nexport function getDogID(id) {\n  return async dispatch => {\n    let dogID = (await axios.get(`http://localhost:3001/dogs/${id}`)).data;\n    dispatch({\n      type: \"GET_DOG_ID\",\n      payload: dogID\n    });\n  };\n}\nexport function getTemperaments() {\n  return async dispatch => {\n    let dogTemperaments = (await axios.get('http://localhost:3001/temperament')).data;\n    dispatch({\n      type: \"GET_TEMPERAMENTS\",\n      payload: dogTemperaments\n    });\n  };\n}\nexport function reset() {\n  return dispatch => {\n    dispatch({\n      type: \"RESET\"\n    });\n  };\n}\nexport function createDog(dog, temperament) {\n  return async dispatch => {\n    try {\n      /* let newDog = {\r\n          name: dog.name,\r\n          height: `${dog.minHeight} - ${dog.maxHeight}`,\r\n          weight: `${dog.minWeight} - ${dog.maxWeight}`,\r\n          temperament: temperament.temperament,\r\n          lifeSpan: `${dog.minLifeSpan} - ${dog.maxLifeSpan}`\r\n      } */\n      let newDog = {\n        name: dog.name,\n        height: dog.height,\n        weight: dog.weight,\n        temperament: dog.temperament,\n        lifeSpan: dog.lifeSpan\n      };\n      let resp = '';\n      await axios.post('http://localhost:3001/dog', newDog).then(response => resp = response.data);\n      return dispatch({\n        type: 'CREATE_DOG',\n        payload: resp\n      });\n    } catch (error) {\n      return console.log(error);\n    }\n  };\n}\nexport function filterByTemps(temperament) {\n  return {\n    type: \"FILTER_TEMPERAMENTS\",\n    payload: temperament\n  };\n}\nexport function filterTemps(selectedTemps) {\n  return async dispatch => {\n    const allDogs = (await axios.get(`http://localhost:3001/dogs`)).data;\n\n    try {\n      const splittedTemps = allDogs.map(dog => {\n        var _dog$temperament;\n\n        let dogo = {\n          id: dog.id,\n          image: dog.image,\n          name: dog.name,\n          temperament: (_dog$temperament = dog.temperament) === null || _dog$temperament === void 0 ? void 0 : _dog$temperament.split(', '),\n          weight: dog.weight\n        };\n        return dogo;\n      });\n      console.log('soy splitted', splittedTemps);\n      console.log('soy selectedTemps', selectedTemps);\n      let filtered = splittedTemps.filter(dog => selectedTemps.forEach(temp => {\n        var _dog$temperament2;\n\n        return (_dog$temperament2 = dog.temperament) === null || _dog$temperament2 === void 0 ? void 0 : _dog$temperament2.includes(temp);\n      }));\n      let matched = splittedTemps.filter(dog => {\n        var _dog$temperament3;\n\n        return (_dog$temperament3 = dog.temperament) === null || _dog$temperament3 === void 0 ? void 0 : _dog$temperament3.includes(selectedTemps);\n      });\n\n      for (let i = 0; i < selectedTemps.length; i++) {\n        let dogstoFilter = splittedTemps;\n        console.log('soy dogsToFilter', dogstoFilter);\n        dogstoFilter.filter;\n        /* let matchedWithTemp = splittedTemps.filter(dog => dog.temperament?.include(selectedTemps[i])) */\n      }\n\n      console.log('soy filtered', filtered);\n      return dispatch({\n        type: 'FILTER_TEMPS',\n        payload: matched\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function orderNameAZ() {\n  return {\n    type: \"ORDER_A_Z\"\n  };\n}\nexport function orderNameZA() {\n  return {\n    type: \"ORDER_Z_A\"\n  };\n}\nexport function orderWeightASC() {\n  return {\n    type: 'ORDER_WEIGHT_ASC'\n  };\n}\nexport function orderWeightDESC() {\n  return {\n    type: 'ORDER_WEIGHT_DESC'\n  };\n}\nexport function filterByApi() {\n  return {\n    type: 'FILTER_BY_API'\n  };\n}\nexport function filterByDB() {\n  return {\n    type: 'FILTER_BY_DB'\n  };\n}\nexport function allOrigins() {\n  return {\n    type: 'ALL_ORIGINS'\n  };\n}","map":{"version":3,"names":["axios","getDogs","dispatch","allDogs","get","data","type","payload","searchDog","name","breedName","getDogID","id","dogID","getTemperaments","dogTemperaments","reset","createDog","dog","temperament","newDog","height","weight","lifeSpan","resp","post","then","response","error","console","log","filterByTemps","filterTemps","selectedTemps","splittedTemps","map","dogo","image","split","filtered","filter","forEach","temp","includes","matched","i","length","dogstoFilter","orderNameAZ","orderNameZA","orderWeightASC","orderWeightDESC","filterByApi","filterByDB","allOrigins"],"sources":["C:/Users/sebae/OneDrive/Escritorio/Henry/PI DOGS/PI-Dogs-main/PI-Dogs-main/client/src/actions/index.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n\r\n\r\n\r\n export  function getDogs() {\r\n    return async function(dispatch) {\r\n        // const dogsCreated = await Dog.findAll()\r\n        let allDogs = (await axios.get(`http://localhost:3001/dogs`)).data;\r\n        // dogsCreated.map( dc => allDogs.push(dc))\r\n       //let  allDogsjson = allDogs.toJson()\r\n        dispatch({\r\n            type:\"GET_DOGS\",\r\n            payload: allDogs//json\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport function searchDog(name) {\r\n    return async function(dispatch) {\r\n        let breedName = (await axios.get(`http://localhost:3001/dogs?name=${name}`)).data;\r\n        dispatch({\r\n            type: \"SEARCH_DOG\",\r\n            payload: breedName\r\n        })\r\n    }\r\n}\r\nexport function getDogID(id) {\r\n    return async (dispatch) => { \r\n        let dogID = (await axios.get(`http://localhost:3001/dogs/${id}`)).data\r\n        dispatch({\r\n            type: \"GET_DOG_ID\",\r\n            payload: dogID\r\n        })\r\n    }\r\n}\r\n\r\nexport function getTemperaments() {\r\n    return async (dispatch) => {\r\n        let dogTemperaments = (await axios.get('http://localhost:3001/temperament')).data\r\n        dispatch({\r\n            type: \"GET_TEMPERAMENTS\",\r\n            payload: dogTemperaments\r\n        })\r\n    }\r\n}\r\n\r\nexport  function reset() {\r\n    return (dispatch) =>{\r\n        dispatch({\r\n            type: \"RESET\"\r\n        }\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport function createDog(dog, temperament) {\r\n    return async (dispatch) => {\r\n        try {\r\n            /* let newDog = {\r\n                name: dog.name,\r\n                height: `${dog.minHeight} - ${dog.maxHeight}`,\r\n                weight: `${dog.minWeight} - ${dog.maxWeight}`,\r\n                temperament: temperament.temperament,\r\n                lifeSpan: `${dog.minLifeSpan} - ${dog.maxLifeSpan}`\r\n            } */\r\n            let newDog = {\r\n                name: dog.name,\r\n                height: dog.height,\r\n                weight: dog.weight,\r\n                temperament: dog.temperament,\r\n                lifeSpan: dog.lifeSpan\r\n            }\r\n            let resp = ''\r\n            await axios.post('http://localhost:3001/dog', newDog)\r\n            .then(response => resp = response.data)\r\n            return dispatch({\r\n                type: 'CREATE_DOG',\r\n                payload: resp\r\n            })\r\n\r\n        } catch(error) {\r\n            return console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport function filterByTemps(temperament) {\r\n    return {\r\n        type: \"FILTER_TEMPERAMENTS\",\r\n        payload: temperament\r\n    }\r\n}\r\n\r\nexport function filterTemps(selectedTemps) {\r\n    return async (dispatch) => {\r\n        const allDogs =  (await axios.get(`http://localhost:3001/dogs`)).data\r\n        try {\r\n            \r\n            const splittedTemps = allDogs.map(dog =>  {\r\n                let dogo = {\r\n                    id: dog.id,\r\n                    image: dog.image,\r\n                    name: dog.name,\r\n                    temperament: dog.temperament?.split(', '),\r\n                    weight: dog.weight\r\n                }\r\n                return dogo\r\n            })\r\n            console.log('soy splitted', splittedTemps)\r\n            console.log('soy selectedTemps', selectedTemps)\r\n            let filtered = splittedTemps.filter(dog => selectedTemps.forEach(temp => dog.temperament?.includes(temp)))  \r\n            let matched = splittedTemps.filter(dog => dog.temperament?.includes(selectedTemps))\r\n\r\n            for( let i=0; i < selectedTemps.length; i++ ) {\r\n                let dogstoFilter = splittedTemps\r\n                console.log('soy dogsToFilter', dogstoFilter)\r\n                dogstoFilter.filter\r\n               /* let matchedWithTemp = splittedTemps.filter(dog => dog.temperament?.include(selectedTemps[i])) */\r\n                \r\n\r\n            }\r\n\r\n            console.log('soy filtered', filtered)\r\n            return dispatch({\r\n                type: 'FILTER_TEMPS',\r\n                payload: matched\r\n            })\r\n        } catch(error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport function orderNameAZ() {\r\n    return {\r\n        type: \"ORDER_A_Z\"\r\n    }\r\n}\r\n\r\nexport function orderNameZA () {\r\n    return {\r\n        type: \"ORDER_Z_A\"\r\n    }\r\n}\r\n\r\nexport function orderWeightASC () {\r\n    return {\r\n        type: 'ORDER_WEIGHT_ASC'\r\n    }\r\n}\r\n\r\nexport function orderWeightDESC () {\r\n    return {\r\n        type: 'ORDER_WEIGHT_DESC'\r\n    }\r\n}\r\n\r\nexport function filterByApi () {\r\n    return {\r\n        type: 'FILTER_BY_API',\r\n        \r\n    }\r\n}\r\n\r\nexport function filterByDB () {\r\n    return {\r\n        type: 'FILTER_BY_DB',\r\n        \r\n    }\r\n}\r\n\r\nexport function allOrigins() {\r\n    return {\r\n        type: 'ALL_ORIGINS'\r\n    }\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}