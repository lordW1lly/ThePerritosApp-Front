{"ast":null,"code":"export function validate(input) {\n  let errors = {};\n\n  if (!input.name) {\n    errors.name = 'name is required';\n  } else if (!/^[a-zA-Z\\s]*$/.test(input.name)) {\n    errors.name = 'name is invalid';\n  } //!----> abajo los de Weight ------\n\n\n  if (!/^\\d+$/.test(input.minWeight) || !/[^0-9]/.test(input.maxWeight)) {\n    errors.weight = 'must be a number';\n  } else if (!input.minWeight || !input.maxWeight) {\n    errors.weight = 'weight fields are empty';\n  } else if (input.minWeight >= input.maxWeight) {\n    errors.weight = 'Minimum-weight must be lower value than maximum-weight';\n  } //! --> abajo los de Height--------\n\n  /* if(!/[^0-9]/.test(input.minHeight) || !/[^0-9]/.test(input.maxHeight) ) {\r\n      errors.height = 'must be a number'\r\n        } else */\n\n\n  if (!input.minHeight || !input.maxHeight) {\n    errors.height = 'eight fields are empty';\n  } else if (input.minHeight >= input.maxHeight) {\n    errors.height = 'Minimum-height must be lower value than maximum-height';\n  } //?? ---> para abajo los de lifespan\n\n  /* if(!/[^0-9]/.test(input.minLifeSpan) || !/[^0-9]/.test(input.maxLifeSpan) ) {\r\n      errors.lifeSpan = 'must be a number'\r\n        } else */\n\n\n  if (!input.minLifeSpan || !input.maxLifeSpan) {\n    errors.lifeSpan = 'Life span fields are empty';\n  } else if (input.minLifeSpan >= input.maxLifeSpan) {\n    errors.lifeSpan = 'Minimum-life span life must be lower value than maximum value';\n  } //!! abajo el de temp\n\n\n  return errors;\n}\nexport function validateTemp(temperament) {\n  let tempError = {};\n\n  if (temperament.length === 0) {\n    tempError.temperament = 'Pick at least 3(three) words';\n  }\n}","map":{"version":3,"names":["validate","input","errors","name","test","minWeight","maxWeight","weight","minHeight","maxHeight","height","minLifeSpan","maxLifeSpan","lifeSpan","validateTemp","temperament","tempError","length"],"sources":["C:/Users/sebae/OneDrive/Escritorio/Henry/PI DOGS/PI-Dogs-main/PI-Dogs-main/client/src/components/Form/Validate.js"],"sourcesContent":["\r\n\r\n\r\nexport function validate(input) {\r\n    let errors = {};\r\n    if (!input.name) {\r\n        errors.name = 'name is required';\r\n    } else if (!/^[a-zA-Z\\s]*$/.test(input.name)) {\r\n        errors.name = 'name is invalid'\r\n    }\r\n    //!----> abajo los de Weight ------\r\n\r\n    if (!/^\\d+$/.test(input.minWeight) || !/[^0-9]/.test(input.maxWeight)) {\r\n        errors.weight = 'must be a number'\r\n\r\n    } else if (!input.minWeight || !input.maxWeight) {\r\n        errors.weight = 'weight fields are empty'\r\n    } else if (input.minWeight >= input.maxWeight) {\r\n        errors.weight = 'Minimum-weight must be lower value than maximum-weight'\r\n    }\r\n    //! --> abajo los de Height--------\r\n\r\n        /* if(!/[^0-9]/.test(input.minHeight) || !/[^0-9]/.test(input.maxHeight) ) {\r\n            errors.height = 'must be a number'\r\n    \r\n        } else */ if (!input.minHeight || !input.maxHeight) {\r\n        errors.height = 'eight fields are empty'\r\n    } else if (input.minHeight >= input.maxHeight) {\r\n        errors.height = 'Minimum-height must be lower value than maximum-height'\r\n    }\r\n    //?? ---> para abajo los de lifespan\r\n\r\n        /* if(!/[^0-9]/.test(input.minLifeSpan) || !/[^0-9]/.test(input.maxLifeSpan) ) {\r\n            errors.lifeSpan = 'must be a number'\r\n    \r\n        } else */ if (!input.minLifeSpan || !input.maxLifeSpan) {\r\n        errors.lifeSpan = 'Life span fields are empty'\r\n    } else if (input.minLifeSpan >= input.maxLifeSpan) {\r\n        errors.lifeSpan = 'Minimum-life span life must be lower value than maximum value'\r\n    }\r\n    //!! abajo el de temp\r\n\r\n\r\n    return errors;\r\n}\r\n\r\nexport function validateTemp(temperament) {\r\n    let tempError = {};\r\n    if (temperament.length === 0) {\r\n        tempError.temperament = 'Pick at least 3(three) words'\r\n    }\r\n}\r\n"],"mappings":"AAGA,OAAO,SAASA,QAAT,CAAkBC,KAAlB,EAAyB;EAC5B,IAAIC,MAAM,GAAG,EAAb;;EACA,IAAI,CAACD,KAAK,CAACE,IAAX,EAAiB;IACbD,MAAM,CAACC,IAAP,GAAc,kBAAd;EACH,CAFD,MAEO,IAAI,CAAC,gBAAgBC,IAAhB,CAAqBH,KAAK,CAACE,IAA3B,CAAL,EAAuC;IAC1CD,MAAM,CAACC,IAAP,GAAc,iBAAd;EACH,CAN2B,CAO5B;;;EAEA,IAAI,CAAC,QAAQC,IAAR,CAAaH,KAAK,CAACI,SAAnB,CAAD,IAAkC,CAAC,SAASD,IAAT,CAAcH,KAAK,CAACK,SAApB,CAAvC,EAAuE;IACnEJ,MAAM,CAACK,MAAP,GAAgB,kBAAhB;EAEH,CAHD,MAGO,IAAI,CAACN,KAAK,CAACI,SAAP,IAAoB,CAACJ,KAAK,CAACK,SAA/B,EAA0C;IAC7CJ,MAAM,CAACK,MAAP,GAAgB,yBAAhB;EACH,CAFM,MAEA,IAAIN,KAAK,CAACI,SAAN,IAAmBJ,KAAK,CAACK,SAA7B,EAAwC;IAC3CJ,MAAM,CAACK,MAAP,GAAgB,wDAAhB;EACH,CAhB2B,CAiB5B;;EAEI;AACR;AACA;;;EACkB,IAAI,CAACN,KAAK,CAACO,SAAP,IAAoB,CAACP,KAAK,CAACQ,SAA/B,EAA0C;IACpDP,MAAM,CAACQ,MAAP,GAAgB,wBAAhB;EACH,CAFa,MAEP,IAAIT,KAAK,CAACO,SAAN,IAAmBP,KAAK,CAACQ,SAA7B,EAAwC;IAC3CP,MAAM,CAACQ,MAAP,GAAgB,wDAAhB;EACH,CA1B2B,CA2B5B;;EAEI;AACR;AACA;;;EACkB,IAAI,CAACT,KAAK,CAACU,WAAP,IAAsB,CAACV,KAAK,CAACW,WAAjC,EAA8C;IACxDV,MAAM,CAACW,QAAP,GAAkB,4BAAlB;EACH,CAFa,MAEP,IAAIZ,KAAK,CAACU,WAAN,IAAqBV,KAAK,CAACW,WAA/B,EAA4C;IAC/CV,MAAM,CAACW,QAAP,GAAkB,+DAAlB;EACH,CApC2B,CAqC5B;;;EAGA,OAAOX,MAAP;AACH;AAED,OAAO,SAASY,YAAT,CAAsBC,WAAtB,EAAmC;EACtC,IAAIC,SAAS,GAAG,EAAhB;;EACA,IAAID,WAAW,CAACE,MAAZ,KAAuB,CAA3B,EAA8B;IAC1BD,SAAS,CAACD,WAAV,GAAwB,8BAAxB;EACH;AACJ"},"metadata":{},"sourceType":"module"}